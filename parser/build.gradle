group 'me.vertretungsplan'
version '1.0.0-beta165'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

sourceCompatibility = 1.7
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    compile 'joda-time:joda-time:2.8.1'
    compile 'org.jsoup:jsoup:1.9.2'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.3'
    compile 'org.apache.httpcomponents:httpmime:4.5.3'
    compile 'org.json:json:20090211'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.jetbrains:annotations:13.0'
    compile 'commons-io:commons-io:2.5'
    compile 'com.github.mifmif:generex:1.0.2'
    compile 'net.sf.biweekly:biweekly:0.6.1'
    compile group: 'com.googlecode.juniversalchardet', name: 'juniversalchardet', version: '1.0.3'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task javadoc(overwrite: true, type: Javadoc) {
    source fileTree(dir: 'src/main/java/me/vertretungsplan').matching {
        exclude 'utils/**'
        exclude 'networking/**'
    }
    options.encoding = 'UTF-8'
    options.links("http://docs.oracle.com/javase/7/docs/api/");
    options.overview = "src/main/java/overview.html"

    classpath = sourceSets.main.output + sourceSets.main.compileClasspath
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['com/paour/comparator/**', 'name/fraser/neil/plaintext/**'])
        })
    }
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'substitution-schedule-parser'
    bintrayOrg = 'vertretungsplanme'

    publishedGroupId = 'me.vertretungsplan'
    libraryName = 'Substitution schedule parser library'
    artifact = 'parser'

    libraryDescription = "Java library for parsing schools' substitution schedules. Supports multiple different systems mainly used in the German-speaking countries."

    siteUrl = 'https://github.com/johan12345/substitution-schedule-parser'
    gitHubUrl = 'https://github.com/johan12345/substitution-schedule-parser'
    gitUrl = 'https://github.com/johan12345/substitution-schedule-parser.git'
    gitSshUrl = 'git@github.com:johan12345/substitution-schedule-parser.git'

    libraryVersion = version

    allLicenses = ["MPL-2.0"]
    licenseName = 'Mozilla Public License Version 2.0'
    licenseUrl = 'https://www.mozilla.org/media/MPL/2.0/index.txt'

    developerId = 'johan12345'
    developerName = 'Johan von Forstner'
    developerEmail = 'info@vertretungsplan.me'
}

apply from: 'bintray.gradle'